"use strict";function TimeTableCtrl($scope,$http,$routeParams,hourService,$window,$location){$scope.tableData=!1,$scope.days=[{number:1,spelled:"Maandag"},{number:2,spelled:"Dinsdag"},{number:3,spelled:"Woensdag"},{number:4,spelled:"Donderdag"},{number:5,spelled:"Vrijdag"}],// TODO: start times probably aren't necessary (?)
$scope.hours=[{number:1,start:"08:45"},{number:2,start:"09:35"},{number:3,start:"10:45"},{number:4,start:"11:35"},{number:5,start:"12:25"},{number:6,start:"13:15"},{number:7,start:"14:05"},{number:8,start:"15:15"},{number:9,start:"16:05"},{number:10,start:"16:55"},{number:11,start:"18:00"},{number:12,start:"18:50"},{number:13,start:"20:00"},{number:14,start:"21:40"}],$scope.input=function(){// $scope.$apply( $location.path( url ) );
// If there's something filled in (teacher, room or class)
// $scope.$apply( $location.path( url ) );
// If there's something filled in (teacher, room or class)
return $routeParams.query?(console.log("Er is wat ingevuld: "+$routeParams.query),"/query/"+$routeParams.query):"/me"},// Search query (can be classes, rooms or teachers)
$scope.search="",// Update the query URL to the new search query
$scope.updateurl=function(){$location.path("/query/"+$scope.search)},// Get the personal schedule from the API
// TODO: Only pull the timetables for this week (calculate the difference between selected week and current week)
$http.jsonp(APIconfig.url("/Schedule"+$scope.input()+"?includeTeacher=false&IncludeStartOfWeek=true&daysAhead=90")).success(function(data){$scope.tableData=data.data,// sorry for the awful names it's late okay?
$scope.tableName=data.title}).error(function(){// Redirect to FHICT loginpage if there's an error, because the user probably isn't logged in
// TODO: Check if it's a 'normal' error or auth error
// TODO: Redirect back to Pluff
window.location="https://portal.fhict.nl/CookieAuth.dll?GetLogon?reason=0&formdir=6"}),// Set the default used weeknumber (without leading zero)
$scope.weekNumberUsed=parseInt(moment().format("w")),$scope.weekNumber=function(){var weekInfo={};// Get current week number (without leading zero)
// TODO: If it's friday after 18 pm or weekend, make the current week next week
// Rotate the number when the year has ended
return weekInfo.current=parseInt(moment().format("w")),weekInfo.use=$scope.weekNumberUsed,53===weekInfo.use&&(weekInfo.use=1),0===weekInfo.use&&(weekInfo.use=52),$scope.weekNumberUsed=weekInfo.use,weekInfo},$scope.nextWeek=function(){// Add 1 to the weeknumber in use
$scope.weekNumberUsed++,console.log("Op naar volgende week! "+$scope.weekNumberUsed)},$scope.currentWeek=function(){// Reset to the current week
$scope.weekNumberUsed=$scope.weekNumber().current,console.log("Op naar de huidige week! "+$scope.weekNumberUsed)},$scope.previousWeek=function(){// Subtract 1 from the weeknumber in use
// TODO: Do something when user tries to go past the current week
$scope.weekNumberUsed--,console.log("Op naar de vorige week! "+$scope.weekNumberUsed)},$scope.getHour=function(dayNumber,hourNumber){return hourService.getHour($scope,dayNumber,hourNumber)},// Bind keybindings to the window to enable right and left arrow navigation
angular.element($window).on("keydown",function(e){// Go to the next week on right arrow key
39===e.keyCode&&$scope.$apply(function(){$scope.nextWeek()}),// Go to the previous week on left arrow key
37===e.keyCode&&$scope.$apply(function(){$scope.previousWeek()})}),// Calculate the date of the current day
$scope.currentDayDate=function(dayNumber){return moment("2014-"+$scope.weekNumber().use+"-"+dayNumber,"YYYY-w-d")},// Check if the current day is today
$scope.isActiveDay=function(dayNumber){return moment().isSame($scope.currentDayDate(dayNumber),"day")?!0:void 0}}angular.module("pluffApp",["pluffApp.controllers","pluffApp.services","ngRoute","ngAnimate"]).config(function($routeProvider,$locationProvider){// TODO: Everything.
$routeProvider.when("/",{templateUrl:"partials/timetable.html",controller:"TimeTableCtrl"}).when("/query/:query",{templateUrl:"partials/timetable.html",controller:"TimeTableCtrl",resolve:{logging:function($route){// $route.reload()
console.log("Query is "+$route.current.params.query)}}}),$locationProvider.html5Mode(!0)});var APIconfig={urlRaw:"https://apps.fhict.nl/api/v1",callback:"&callback=JSON_CALLBACK",url:function(url){// Enclose the given _relative_ url with the absolute url + callback.
// TODO: Replace ampersand with questionmark if needed (maybe not necessary?)
return this.urlRaw+url+this.callback}};/* Services */
angular.module("pluffApp.services",[]).factory("hourService",function(){var hour={};return hour.getHour=function($scope,dayNumber,hourNumber){// dayNumber can be 1 to 5 (day of the week)
// hourNumber can be 1 to 14
// Allow multiple lessons in one hour
var hourCallback=[],currentDay=$scope.currentDayDate(dayNumber),hourExp=Math.pow(2,hourNumber-1);// Wait until the JSON is fully loaded
// TODO: Optimize for performance
return 0!=$scope.tableData&&$scope.tableData.forEach(function(lesson){// Check if the lesson is on the current day and if the current hour is in the mask
// Ex.: if a mask is 12, the binary code of it is 1100. This means that the lesson is in the third and fourth hour.
currentDay.isSame(lesson.start,"day")&&lesson.hoursMask&hourExp&&hourCallback.push(lesson)}),hourCallback},hour}),/* Controllers */
angular.module("pluffApp.controllers",[]).controller("TimeTableCtrl",TimeTableCtrl);